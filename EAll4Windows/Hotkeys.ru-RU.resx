<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lbAbout.Size" type="System.Drawing.Size, System.Drawing">
    <value>608, 19</value>
  </data>
  <data name="lbAbout.Text" xml:space="preserve">
    <value>EAll4Windows - Сборка от Jays2Kings (v</value>
  </data>
  <data name="lLChangelog.Location" type="System.Drawing.Point, System.Drawing">
    <value>7, 3</value>
  </data>
  <data name="lLChangelog.Size" type="System.Drawing.Size, System.Drawing">
    <value>103, 13</value>
  </data>
  <data name="lLChangelog.Text" xml:space="preserve">
    <value>Список изменений</value>
  </data>
  <data name="linkDonate.Location" type="System.Drawing.Point, System.Drawing">
    <value>473, 3</value>
  </data>
  <data name="linkDonate.Size" type="System.Drawing.Size, System.Drawing">
    <value>131, 13</value>
  </data>
  <data name="linkDonate.Text" xml:space="preserve">
    <value>Сделать пожертвование</value>
  </data>
  <data name="lbHotkeys.Size" type="System.Drawing.Size, System.Drawing">
    <value>577, 454</value>
  </data>
  <data name="lbHotkeys.Text" xml:space="preserve">
    <value>Скрыть контроллер EAll4: Скрывает контроллер EAll4 в режиме DInput от других программ Включите, если вы наблюдаете эффект двойного ввода

Нажатие на тачпад слева: Касание слева

Нажатие на тачпад справа: Касание справа

Нажатие на тачпад двумя пальцами: Мультитач

Нажатие на верхнюю часть тачпада: Верхний клик

Guide + Start или удерживайте Guide 10 секунд: Отключить контроллер (только при подключении по Bluetooth)

Коснитесь тачпада + Guide: Отключение жестов тачпада (нажатия продолжат работать)

Pad click on lower right*: Правый клик (удобно, если правая сторона тачпада как кнопка мыши)

Скользите вверх/вниз двумя пальцами по тачпаду *: Прокрутка вверх или вниз

Коснитесь и удерживайте палец на тачпаде *: Перетаскивание левой кнопкой мыши

Скольжение двумя пальцами влево или вправо*: Цикличность профилей

Модификатор сдвига: Удерживайте для использования альтернативного набора управления

При назначение клавиатуры и мыши:

Переключатель: Клавиша будет оставаться в нажатом состоянии до повторного нажатия

Макрос: Присвоить несколько клавиш на одно нажатие

Скан-код: Клавиши распознаются по-разному. Необходимо для определённых игр.

* Если включено</value>
  </data>
  <data name="tPHotkeys.Size" type="System.Drawing.Size, System.Drawing">
    <value>600, 401</value>
  </data>
  <data name="tPHotkeys.Text" xml:space="preserve">
    <value>Горячие клавиши</value>
  </data>
  <data name="lbTranslators.Size" type="System.Drawing.Size, System.Drawing">
    <value>74, 13</value>
  </data>
  <data name="lbTranslators.Text" xml:space="preserve">
    <value>Переводчики</value>
  </data>
  <data name="lbLinkText.Location" type="System.Drawing.Point, System.Drawing">
    <value>3, 385</value>
  </data>
  <data name="tPCredits.Size" type="System.Drawing.Size, System.Drawing">
    <value>600, 401</value>
  </data>
  <data name="tPCredits.Text" xml:space="preserve">
    <value>Титры</value>
  </data>
  <data name="tCAbout.Location" type="System.Drawing.Point, System.Drawing">
    <value>0, 19</value>
  </data>
  <data name="tCAbout.Size" type="System.Drawing.Size, System.Drawing">
    <value>608, 427</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>608, 446</value>
  </data>
</root>